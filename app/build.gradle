apply plugin: 'com.android.library'
apply plugin: 'jacoco'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "${gradleToolsLib}"
        classpath "${androidTestTool}"
    }
}


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'NOTICE.txt'
    }

    jacoco {
        version "0.7.1.201405082137"
    }
}

task combinedCoverageReport(type: JacocoReport, dependsOn: [ "testDebug", "assembleDebug" ]) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = false
        html.enabled = true
    }
    // excludes Dagger generated classes if there are any
    classDirectories = files(
            fileTree(
                    dir: 'build/intermediates/classes/debug',
                    excludes: ['**/R*.class',
                               '**/*$InjectAdapter.class',
                               '**/*$ModuleAdapter.class',
                               '**/*$ViewInjector*.class'
                    ])
    )

    sourceDirectories = files(['src/main/java'])
    executionData = files("build/jacoco/testDebug.exec")
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

apply plugin: 'org.robolectric'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.2'

    testCompile group: 'org.hamcrest', name: 'hamcrest-integration', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'

    testCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }

    androidTestCompile configurations.testCompile.dependencies
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Storme']
    pkg {
        repo = 'maven'
        name = 'Storme'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/brettwold/Storme.git'
        version {
            name = "${project.version}"
            desc = 'Storme'
            released  = new Date()
            vcsTag = 'v1.2'
        }
    }
}

publishing {
    publications {
        Storme(MavenPublication) {
            groupId 'com.brettwold'
            artifactId 'storme'
            version "${project.version}"
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"
        }
    }
}
